make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2014 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Thu Jun 16 13:11:01 2022

# Variables

# 'override' directive
GNUMAKEFLAGS := 
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
DESKTOP_SESSION = ubuntu
# makefile (from 'Makefile', line 18)
.SHELLFLAGS = -ec
# environment
XDG_SESSION_TYPE = x11
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# environment
IM_CONFIG_PHASE = 2
# makefile (from 'Makefile', line 119)
PROJECT_DIR := /home/esparig/projects/kubebuilder-cronjob
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# environment
GDMSESSION = ubuntu
# environment
XMODIFIERS = @im=ibus
# makefile
CURDIR := /home/esparig/projects/kubebuilder-cronjob
# makefile (from 'Makefile', line 17)
SHELL = /usr/bin/env bash -o pipefail
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/share/code/code
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# automatic
@F = $(notdir $@)
# environment
GIO_LAUNCHED_DESKTOP_FILE = /usr/share/applications/code.desktop
# environment
USERNAME = esparig
# environment
MAKELEVEL := 0
# environment
MANDATORY_PATH = /usr/share/gconf/ubuntu.mandatory.path
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/home/esparig/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
INFOPATH = /home/linuxbrew/.linuxbrew/share/info:
# environment
CLUTTER_IM_MODULE = xim
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-41b29606-ff3a-4aaf-9c32-9b48a5ae0fdc.sock
# environment
LC_NAME = es_ES.UTF-8
# environment
VSCODE_CWD = /home/esparig
# environment
GOPROXY = https://proxy.golang.org,direct
# makefile (from 'Makefile', line 120)
go-get-tool = @[ -f $(1) ] || { set -e ; TMP_DIR=$$(mktemp -d) ; cd $$TMP_DIR ; go mod init tmp ; echo "Downloading $(2)" ; GOBIN=$(PROJECT_DIR)/bin go get $(2) ; rm -rf $$TMP_DIR ; }
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:/home/esparig/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin:/home/esparig/go/bin/
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# environment
GJS_DEBUG_OUTPUT = stderr
# environment
SESSION_MANAGER = local/valkyria:@/tmp/.ICE-unix/4570,unix/valkyria:/tmp/.ICE-unix/4570
# environment
XDG_RUNTIME_DIR = /run/user/1000
# environment
TEXTDOMAIN = im-config
# environment
GOPATH = /home/esparig/go
# environment
XDG_MENU_PREFIX = gnome-
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'Makefile', line 103)
CONTROLLER_GEN = $(shell pwd)/bin/controller-gen
# environment
XDG_SESSION_DESKTOP = ubuntu
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 9353
# automatic
%F = $(notdir $%)
# makefile (from 'Makefile', line 9)
GOBIN = $(shell go env GOPATH)/bin
# environment
DISPLAY = :0
# environment
GTK_IM_MODULE = ibus
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /home/esparig/projects/kubebuilder-cronjob
# environment
HOMEBREW_CELLAR = /home/linuxbrew/.linuxbrew/Cellar
# environment
XDG_SEAT = seat0
# environment
SSH_AGENT_PID = 4770
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# environment
GTK_MODULES = gail:atk-bridge
# environment
MANPATH = /home/linuxbrew/.linuxbrew/share/man:
# environment
GOMODCACHE = /home/esparig/go/pkg/mod
# environment
HOME = /home/esparig
# environment
VSCODE_CODE_CACHE_PATH = /home/esparig/.config/Code/CachedData/4af164ea3a06f701fe3e89a2bcbb421d2026b68f
# environment
LOGNAME = esparig
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# automatic
+F = $(notdir $+)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
MAKE_VERSION := 4.1
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XDG_VTNR = 2
# environment
LC_TIME = es_ES.UTF-8
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
QT_IM_MODULE = ibus
# environment
SHLVL = 1
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# environment
XDG_SESSION_ID = 2
# environment
USER = esparig
# environment
LC_MONETARY = es_ES.UTF-8
# makefile
.DEFAULT_GOAL := all
# environment
XDG_CURRENT_DESKTOP = Unity
# environment
LIBVIRT_DEFAULT_URI = qemu:///system
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
LC_TELEPHONE = es_ES.UTF-8
# default
MAKE_COMMAND := make
# makefile (from 'Makefile', line 108)
KUSTOMIZE = $(shell pwd)/bin/kustomize
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# makefile (from 'Makefile', line 3)
IMG = controller:latest
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-b04286c5-1.68.0-main.sock
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
HOMEBREW_PREFIX = /home/linuxbrew/.linuxbrew
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
GDK_BACKEND = x11
# environment
LC_PAPER = es_ES.UTF-8
# makefile (from 'Makefile', line 113)
ENVTEST = $(shell pwd)/bin/setup-envtest
# environment
HOMEBREW_REPOSITORY = /home/linuxbrew/.linuxbrew/Homebrew
# environment
QT_ACCESSIBILITY = 1
# environment
DEFAULTS_PATH = /usr/share/gconf/ubuntu.default.path
# environment
TEXTDOMAINDIR = /usr/share/locale/
# default
MAKEFILES := 
# environment
LC_NUMERIC = es_ES.UTF-8
# automatic
<F = $(notdir $<)
# environment
LC_MEASUREMENT = es_ES.UTF-8
# environment
LC_ALL = C
# environment
QT4_IM_MODULE = xim
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# environment
CHROME_DESKTOP = code-url-handler.desktop
# environment
WINDOWPATH = 2
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# environment
LC_IDENTIFICATION = es_ES.UTF-8
# default
.RECIPEPREFIX := 
# makefile (from 'Makefile', line 83)
ignore-not-found = false
# environment
LC_ADDRESS = es_ES.UTF-8
# environment
LANG = C
# makefile (from 'Makefile', line 5)
ENVTEST_K8S_VERSION = 1.23
# environment
VSCODE_PID = 9353
# variable set hash-table stats:
# Load=126/1024=12%, Rehash=0, Collisions=19/172=11%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 66307, inode 2233428): 16 files, no impossibilities.

# 16 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

envtest:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
 
#  recipe to execute (from 'Makefile', line 116):
	$(call go-get-tool,$(ENVTEST),sigs.k8s.io/controller-runtime/tools/setup-envtest@latest)

all: build
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/10=0%

docker-build: test
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 74):
	docker build -t ${IMG} .

.PHONY: all help manifests generate fmt vet test build run docker-build docker-push install uninstall deploy undeploy controller-gen kustomize envtest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

uninstall: manifests kustomize
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 92):
	$(KUSTOMIZE) build config/crd | kubectl delete --ignore-not-found=$(ignore-not-found) -f -

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 13:08:19.78299937
#  File has been updated.
#  Successfully updated.

test: manifests generate fmt vet envtest
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 60):
	KUBEBUILDER_ASSETS="$(shell $(ENVTEST) use $(ENVTEST_K8S_VERSION) -p path)" go test ./... -coverprofile cover.out

build: generate fmt vet
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/10=0%
#  recipe to execute (from 'Makefile', line 66):
	go build -o bin/manager main.go

vet:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 56):
	go vet ./...

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 38):
	@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m<target>\033[0m\n"} /^[a-zA-Z_0-9-]+:.*?##/ { printf "  \033[36m%-15s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($$0, 5) } ' $(MAKEFILE_LIST)

kustomize:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 111):
	$(call go-get-tool,$(KUSTOMIZE),sigs.k8s.io/kustomize/kustomize/v3@v3.8.7)

generate: controller-gen
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/10=0%
#  recipe to execute (from 'Makefile', line 48):
	$(CONTROLLER_GEN) object:headerFile="hack/boilerplate.go.txt" paths="./..."

undeploy:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 101):
	$(KUSTOMIZE) build config/default | kubectl delete --ignore-not-found=$(ignore-not-found) -f -

manifests: controller-gen
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 44):
	$(CONTROLLER_GEN) rbac:roleName=manager-role crd webhook paths="./..." output:crd:artifacts:config=config/crd/bases

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

run: manifests generate fmt vet
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 70):
	go run ./main.go

fmt:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 52):
	go fmt ./...

deploy: manifests kustomize
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 96):
	cd config/manager && $(KUSTOMIZE) edit set image controller=${IMG}
	$(KUSTOMIZE) build config/default | kubectl apply -f -

controller-gen:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := controller-gen
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=2/18=11%
#  recipe to execute (from 'Makefile', line 106):
	$(call go-get-tool,$(CONTROLLER_GEN),sigs.k8s.io/controller-tools/cmd/controller-gen@v0.8.0)

docker-push:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 78):
	docker push ${IMG}

install: manifests kustomize
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 88):
	$(KUSTOMIZE) build config/crd | kubectl apply -f -

# files hash-table stats:
# Load=22/1024=2%, Rehash=0, Collisions=3/108=3%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 39 / storage = 324 B / avg = 8 B
# current buf: size = 8162 B / used = 324 B / count = 39 / avg = 8 B

# strcache performance: lookups = 138 / hit rate = 71%
# hash-table stats:
# Load=39/8192=0%, Rehash=0, Collisions=1/138=1%
# Finished Make data base on Thu Jun 16 13:11:01 2022

 
